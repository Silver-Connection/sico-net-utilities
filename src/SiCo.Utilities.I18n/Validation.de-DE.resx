<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="any_lowercase" xml:space="preserve">
    <value>Eingabe muss ein Kleinbuchstaben beinhalten</value>
  </data>
  <data name="any_special_number" xml:space="preserve">
    <value>Das Passwort muss ein &lt;b&gt;Sonderzeichen&lt;/b&gt; oder eine Nummer beinhalten</value>
  </data>
  <data name="any_upercase" xml:space="preserve">
    <value>Eingabe muss ein Großbuchstaben beinhalten</value>
  </data>
  <data name="creditcard" xml:space="preserve">
    <value>Geben Sie bitte eine gültige Kreditkartennummer ein.</value>
  </data>
  <data name="date" xml:space="preserve">
    <value>Bitte geben Sie ein gültiges Datum ein.</value>
  </data>
  <data name="date_iso" xml:space="preserve">
    <value>Bitte geben Sie ein gültiges Datum (ISO) ein.</value>
  </data>
  <data name="digits" xml:space="preserve">
    <value>Geben Sie bitte nur Ziffern ein.</value>
  </data>
  <data name="email" xml:space="preserve">
    <value>Geben Sie bitte eine gültige E-Mail Adresse ein.</value>
  </data>
  <data name="equal_to" xml:space="preserve">
    <value>Bitte denselben Wert wiederholen.</value>
  </data>
  <data name="file_extension" xml:space="preserve">
    <value>Bitte geben Sie ein Wert mit einer gültigen Endung an.</value>
  </data>
  <data name="max" xml:space="preserve">
    <value>Bitte geben Sie ein Wert kleiner oder gleich  {0} an.</value>
  </data>
  <data name="max_lenght" xml:space="preserve">
    <value>Bitte geben Sie nicht mehr als {1} Zeichen ein.</value>
  </data>
  <data name="min" xml:space="preserve">
    <value>Bitte geben Sie einen Wert größer oder gleich {0} an.</value>
  </data>
  <data name="min_lenght" xml:space="preserve">
    <value>Ihre Eingabe muss mindestens {1} Zeichen lang sein</value>
  </data>
  <data name="number" xml:space="preserve">
    <value>Bitte geben Sie nur Nummern an.</value>
  </data>
  <data name="phone_digits" xml:space="preserve">
    <value>Eine Telefonnummer kann nur aus Zahlen und einem + am Anfang bestehen</value>
  </data>
  <data name="phone_international" xml:space="preserve">
    <value>Internationale Telefonnummern fangen mit '00' oder einem '+' an, gefolgt von einer Zahl außer '0'.</value>
  </data>
  <data name="phone_plus_zero" xml:space="preserve">
    <value>Wenn die Telefonnummer mit einem '+' beginnt, kann keine '0' folgen.</value>
  </data>
  <data name="range" xml:space="preserve">
    <value>Bitte geben Sie einen Wert zwischen {0} und {1} an.</value>
  </data>
  <data name="range_lenght" xml:space="preserve">
    <value>Ihre Eingabe muss zwischen {0} und {1} Zeichen lang sein.</value>
  </data>
  <data name="remote" xml:space="preserve">
    <value>Bitte korrigieren Sie dieses Feld</value>
  </data>
  <data name="required" xml:space="preserve">
    <value>Dieses Feld ist ein Pflichtfeld.</value>
  </data>
  <data name="url" xml:space="preserve">
    <value>Geben Sie bitte eine gültige URL ein.</value>
  </data>
  <data name="valid" xml:space="preserve">
    <value>Gültig</value>
  </data>
  <data name="validated" xml:space="preserve">
    <value>Validiert</value>
  </data>
  <data name="valid_from" xml:space="preserve">
    <value>Gültig von</value>
  </data>
  <data name="valid_till" xml:space="preserve">
    <value>Gültig bis</value>
  </data>
  <data name="invalid_selection" xml:space="preserve">
    <value>Bitte prüfen Sie Ihre Auswahl.</value>
  </data>
  <data name="ipv4_address_netmask_invalid" xml:space="preserve">
    <value>Dies ist keine gültige IPv4 Adresse mit Netzmaske, z.B. 199.29.5.31/32</value>
  </data>
  <data name="ipv4_ipv6_address_invalid" xml:space="preserve">
    <value>Die IPv4/IPv6 Adresse ist ungültig.</value>
  </data>
  <data name="ipv4_ipv6_hostname_address_invalid" xml:space="preserve">
    <value>Der Hostname oder die IPv4/IPv6 Adresse ist ungültig</value>
  </data>
  <data name="phone_inavlid" xml:space="preserve">
    <value>Die Telefonnummer ist ungültig.</value>
  </data>
  <data name="positive_value" xml:space="preserve">
    <value>Bitte einen positiven Wert angeben.</value>
  </data>
  <data name="regular_expression_invalid" xml:space="preserve">
    <value>Der Reguläre Ausdruck ist ungültig</value>
  </data>
  <data name="required_true_for" xml:space="preserve">
    <value>Das Feld {0} muss aktiviert sein.</value>
  </data>
  <data name="cdir_wrong" xml:space="preserve">
    <value>Der Wert ist kein gültiges CIDR Subnetz</value>
  </data>
  <data name="prefix_invalid" xml:space="preserve">
    <value>Ein Präfix kann nur aus Nummern bestehen und einem optionalen '#' am Ende.</value>
  </data>
  <data name="validation_property_msg" xml:space="preserve">
    <value>Eigenschaft: &lt;strong&gt;{0}&lt;/strong&gt;</value>
  </data>
</root>