<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="blacklist" xml:space="preserve">
    <value>Password is blacklisted, please choose a new one.</value>
  </data>
  <data name="change" xml:space="preserve">
    <value>Change Password</value>
  </data>
  <data name="change_error" xml:space="preserve">
    <value>Your password was not accepted. Please try again.</value>
  </data>
  <data name="change_error_strong" xml:space="preserve">
    <value>Your password was not accepted. You need 8 characters in upper and lower case and special characters. Please try again.</value>
  </data>
  <data name="confirm" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="confirm_wrong" xml:space="preserve">
    <value>Fields 'New Password' and 'Confirm Password' do not match.</value>
  </data>
  <data name="contain_lower_upper" xml:space="preserve">
    <value>Password must contain at least one &lt;b&gt;lower and &lt;/b&gt; one &lt;b&gt;upper&lt;/b&gt; character</value>
  </data>
  <data name="contain_number" xml:space="preserve">
    <value>Password must contain one &lt;b&gt;numerical&lt;/b&gt; character</value>
  </data>
  <data name="contain_number_special" xml:space="preserve">
    <value>Password must contain one &lt;b&gt;numerical and/or &lt;/b&gt; one &lt;b&gt;special&lt;/b&gt; character</value>
  </data>
  <data name="contain_special" xml:space="preserve">
    <value>Password must contain one &lt;b&gt;special&lt;/b&gt; character</value>
  </data>
  <data name="current" xml:space="preserve">
    <value>Current Password</value>
  </data>
  <data name="current_requiered" xml:space="preserve">
    <value>You must enter your current Password</value>
  </data>
  <data name="example1" xml:space="preserve">
    <value>Saturday1</value>
  </data>
  <data name="example2" xml:space="preserve">
    <value>IloveDonuts$7</value>
  </data>
  <data name="example3" xml:space="preserve">
    <value>2Weeksvacation</value>
  </data>
  <data name="forgot" xml:space="preserve">
    <value>Forgot password?</value>
  </data>
  <data name="generate" xml:space="preserve">
    <value>Generate New Password</value>
  </data>
  <data name="generate_pin" xml:space="preserve">
    <value>Generate New PIN</value>
  </data>
  <data name="key_send" xml:space="preserve">
    <value>Send Activation key</value>
  </data>
  <data name="length_6" xml:space="preserve">
    <value>Password must be at least &lt;b&gt;6&lt;/b&gt; characters long</value>
  </data>
  <data name="length_8" xml:space="preserve">
    <value>Password must be at least &lt;b&gt;8&lt;/b&gt; characters long</value>
  </data>
  <data name="new_n" xml:space="preserve">
    <value>New Password</value>
  </data>
  <data name="new_reqiered" xml:space="preserve">
    <value>New password can not be empty</value>
  </data>
  <data name="new_send_via" xml:space="preserve">
    <value>We have generated a new Password and send it to you via {0}. This can take a moment.</value>
  </data>
  <data name="not_complex" xml:space="preserve">
    <value>New password is not complex enough</value>
  </data>
  <data name="not_equal" xml:space="preserve">
    <value>The confirmed password differs from the new one.</value>
  </data>
  <data name="password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="password_policy" xml:space="preserve">
    <value>Password Policy</value>
  </data>
  <data name="password_sample_easy" xml:space="preserve">
    <value>Examples: Saturday1, IloveDonuts$7, 2Weeksvacation</value>
  </data>
  <data name="reset_success" xml:space="preserve">
    <value>Password reset</value>
  </data>
  <data name="set_success" xml:space="preserve">
    <value>New password set successfully.</value>
  </data>
  <data name="to_short" xml:space="preserve">
    <value>This password is to short.</value>
  </data>
  <data name="used" xml:space="preserve">
    <value>New password was one of the last 5 used. Please use a different one.</value>
  </data>
  <data name="wrong" xml:space="preserve">
    <value>Password is wrong</value>
  </data>
</root>